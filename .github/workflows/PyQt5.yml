name: PyQt5版exe构建

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: windows-latest

    steps:

    - name: 检出代码
      uses: actions/checkout@v4

    - name: 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: 3.12

    - name: 安装Microsoft Visual C++构建工具
      run: |
        choco install visualstudio2019buildtools --params "--add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --quiet"

    - name: 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install pillow
        pip install pillow-avif-plugin
        pip install PyQt5
        pip install PyQt5-sip
        python -m pip install nuitka

    - name: 下载并解压Dependency Walker
      run: |
        curl -L -o depends.zip http://www.dependencywalker.com/depends22_x64.zip
        Expand-Archive -Path depends.zip -DestinationPath ./depends

    - name: 检查Dependency Walker是否存在
      shell: pwsh
      run: Get-ChildItem -Path ./depends

    - name: 编译EXE文件
      run: |
        nuitka --standalone --onefile --enable-plugin=tk-inter --windows-console-mode=disable AVJPWConverterPyQt5.py --output-dir=./dist

    - name: 列出dist目录的文件
      shell: pwsh
      run: Get-ChildItem -Path ./dist

    - name: 运行Dependency Walker检查根目录下的EXE文件
      run: |
        ./depends/depends.exe /c /f:1 /ot:dependencies.txt ./AVJPWConverterPyQt5.exe

    - name: 列出当前目录的文件列表
      shell: pwsh
      run: Get-ChildItem -Force

    - name: 上传EXE文件和依赖项分析结果
      uses: actions/upload-artifact@v4
      with:
        name: AVJPWConverterPyQt5-exe
        path: ./dist/AVJPWConverterPyQt5.exe

    - name: 上传Dependency Walker输出
      uses: actions/upload-artifact@v4
      with:
        name: dependency-analysis
        path: ./dependencies.txt
